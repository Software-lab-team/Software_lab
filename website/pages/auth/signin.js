import Head from "next/head";
import styles from "../../styles/Home.module.css";
import Signup from "../../components/signupDialog";
import SigninForm from "../../components/signinForm";
import Box from "@mui/material/Box";
import Button from "@mui/material/Button";
import Typography from "@mui/material/Typography";
import Alert from "@mui/material/Alert";
import { useState } from "react";
import { signIn } from "next-auth/react";
import { useRouter } from "next/router";
import { getSession } from "next-auth/react";

/*
Code for the signin/signup page.
*/

export default function SignIn() {
  const [signup, setSignup] = useState(false);
  const [emptyFields, setEmptyFields] = useState(false);

  const { error } = useRouter().query;

  const handleSubmit = async (event) => {
    event.preventDefault();
    setEmptyFields(false);

    const data = new FormData(event.currentTarget);
    const username = data.get("username");
    const password = data.get("password");

    // If either field is empty, set emptyFields to highlight empty text boxes
    if (!username || !password) {
      setEmptyFields(true);
      return;
    }

    // Call the signin API located in pages/api/auth/[...nextauth].js
    await signIn("signin", {
      callbackUrl: `${window.location.origin}/resources`,
      username: username,
      password: password,
    });
  };

  // Open the Dialog box when the signup button is clicked
  const handleOpen = () => {
    setSignup(true);
  };

  // Close the Dialog box when the user clicks off of it
  const handleClose = () => {
    setSignup(false);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Sign in</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Typography component="h1" variant="h5">
          Sign in
        </Typography>
        <Box component="form" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>
          <SigninForm type="Sign In" emptyFields={emptyFields} />
          <Button variant="text" onClick={handleOpen}>
            {"Don't have an account? Sign Up"}
          </Button>
          {
            // If there is an error, display the error message (i.e. invalid username/password, username already exists)
            error && <Alert severity="error">{error}</Alert>
          }
        </Box>
        <Signup open={signup} onClose={handleClose} />
      </main>
    </div>
  );
}

export async function getServerSideProps(context) {
  const session = await getSession(context);

  if (!session) {
    return {
      props: {},
    };
  }

  return {
    redirect: {
      destination: "/resources",
      permanent: false,
    },
  };
}
